<?php

/**
 * This is the model base class for the table "socio".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Socio".
 *
 * Columns in table "socio" available as properties of the model,
 * followed by relations of table "socio" available as properties of the model.
 *
 * @property string $CODIGO
 * @property string $CI
 * @property string $APELLIDO
 * @property string $GENERO
 * @property string $COD_BARRA
 * @property string $DIRECCION
 * @property string $TELEFONO
 * @property string $CELULAR
 * @property string $EMAIL
 * @property string $ESTADO_CIVIL
 * @property string $NOMBRE_CONYUGE
 * @property string $FOTO
 * @property string $ESTADO
 * @property string $TIPO
 * @property string $FECHA_NACIMIENTO
 * @property string $OBS
 * @property integer $COD_USUARIO
 * @property string $FECHA_ACTUALIZACION
 * @property string $FECHA_INGRESO
 * @property string $FECHA_SALIDA
 * @property string $USU_AGUA_RIEGO
 * @property string $USU_AGUA_POTABLE
 * @property string $COD_BARRA_RIEGO_OLD
 * @property string $COD_BARRA_POTABLE
 * @property string $COD_GRUPO
 * @property string $PARTICIPA_COMUNIDAD
 * @property string $USU_ALCANTARILLADO
 * 
 * @property Asistencia[] $asistencias
 */
abstract class BaseSocio extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'socio';
    }

    public static function representingColumn() {
        return 'CI';
    }


    public function rules() {
        return array(
            array('CI, APELLIDO','required'),
            array('COD_USUARIO', 'numerical', 'integerOnly'=>true),
array('APELLIDO, EMAIL, NOMBRE_CONYUGE, ESTADO', 'length', 'max'=>50),
            array('OBS', 'length', 'max'=>1000),
            array('GENERO', 'length', 'max'=>1),
            array('COD_BARRA, CELULAR, ESTADO_CIVIL', 'length', 'max'=>15),
            array('DIRECCION, FOTO', 'length', 'max'=>100),
            array('TELEFONO', 'length', 'max'=>20),
            array('TIPO', 'length', 'max'=>10),
            array('FECHA_NACIMIENTO, FECHA_ACTUALIZACION, FECHA_INGRESO, FECHA_SALIDA, USU_AGUA_RIEGO, USU_AGUA_POTABLE, COD_BARRA_RIEGO_OLD, COD_BARRA_POTABLE, COD_GRUPO, PARTICIPA_COMUNIDAD, USU_ALCANTARILLADO', 'safe'),
            array('CI, APELLIDO, GENERO, COD_BARRA, DIRECCION, TELEFONO, CELULAR, EMAIL, ESTADO_CIVIL, NOMBRE_CONYUGE, FOTO, ESTADO, TIPO, FECHA_NACIMIENTO, OBS, COD_USUARIO, FECHA_ACTUALIZACION, FECHA_INGRESO, FECHA_SALIDA, USU_AGUA_RIEGO, USU_AGUA_POTABLE, COD_BARRA_RIEGO_OLD, COD_BARRA_POTABLE, COD_GRUPO, PARTICIPA_COMUNIDAD, USU_ALCANTARILLADO', 'default', 'setOnEmpty' => true, 'value' => null),
            array('PARTICIPA_COMUNIDAD, USU_ALCANTARILLADO, CODIGO, CI, APELLIDO, GENERO, COD_BARRA, DIRECCION, TELEFONO, CELULAR, EMAIL, ESTADO_CIVIL, NOMBRE_CONYUGE, FOTO, ESTADO, TIPO, FECHA_NACIMIENTO, OBS, COD_USUARIO, FECHA_ACTUALIZACION', 'safe', 'on'=>'search'),
            array('CI', 'numerical'),
            array('CI', 'length', 'max'=>13),
             //Validar que un campo de texto tenga una longitud mínima y máxima
            array('CI', 'length', 'min'=>10, 'max'=>13),
            // Validar que un campo sea único
            array('CI', 'unique', 'message'=>"La CI/RUC ya esta en uso"),
        );
    }

    public function relations() {
        return array(
            'asistencias' => array(self::HAS_MANY, 'Asistencia', 'CODIGO_SOCIO'),
              'usuario' => array(self::BELONGS_TO, 'Usuario', 'COD_USUARIO'),
            'grupo' => array(self::BELONGS_TO, 'Grupo', 'COD_GRUPO'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'CODIGO' => Yii::t('app', 'Código'),
                'CI' => Yii::t('app', 'CI/RUC'),
                'APELLIDO' => Yii::t('app', 'Apellidos y Nombres'),
                'GENERO' => Yii::t('app', 'Género'),
                'COD_BARRA' => Yii::t('app', 'Codigo de barra (Riego 2016)'),
                'DIRECCION' => Yii::t('app', 'Dirección'),
                'TELEFONO' => Yii::t('app', 'Teléfono'),
                'CELULAR' => Yii::t('app', 'Celular'),
                'EMAIL' => Yii::t('app', 'Email'),
                'ESTADO_CIVIL' => Yii::t('app', 'Estado Civil'),
                'NOMBRE_CONYUGE' => Yii::t('app', 'Nombre del conyuge'),
                'FOTO' => Yii::t('app', 'Foto'),
                'ESTADO' => Yii::t('app', 'Activo para los cobros'),
                'TIPO' => Yii::t('app', 'Tipo'),
                'FECHA_NACIMIENTO' => Yii::t('app', 'Fecha Nacimiento'),
                'OBS' => Yii::t('app', 'Observaciones'),
                'COD_USUARIO' => Yii::t('app', 'Actualizado por:'),
                'FECHA_ACTUALIZACION' => Yii::t('app', 'Actualizado el:'),
                'FECHA_INGRESO' => Yii::t('app', 'Fecha de ingreso'),
            'FECHA_SALIDA' => Yii::t('app', 'Fecha de salida'),
            'USU_AGUA_RIEGO' => Yii::t('app', 'Agua de riego'),
            'USU_AGUA_POTABLE' => Yii::t('app', 'Agua potable'),
            'COD_BARRA_RIEGO_OLD' => Yii::t('app', 'Codigo de barra (Riego anterior)'),
            'COD_BARRA_POTABLE' => Yii::t('app', 'Còdigo de barra (Agua Potable)'),
            'COD_GRUPO' => Yii::t('app', 'Grupo'),
            'PARTICIPA_COMUNIDAD' => Yii::t('app', 'Socio activo en la comunidad'),
            'USU_ALCANTARILLADO' => Yii::t('app', 'Alcantarillado'),
            
                'asistencias' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('CODIGO', $this->CODIGO, true);
        $criteria->compare('CI', $this->CI, true);
        $criteria->compare('APELLIDO', $this->APELLIDO, true);
        $criteria->compare('GENERO', $this->GENERO, true);
        $criteria->compare('COD_BARRA', $this->COD_BARRA, true);
        $criteria->compare('DIRECCION', $this->DIRECCION, true);
        $criteria->compare('TELEFONO', $this->TELEFONO, true);
        $criteria->compare('CELULAR', $this->CELULAR, true);
        $criteria->compare('EMAIL', $this->EMAIL, true);
        $criteria->compare('ESTADO_CIVIL', $this->ESTADO_CIVIL, true);
        $criteria->compare('NOMBRE_CONYUGE', $this->NOMBRE_CONYUGE, true);
        $criteria->compare('FOTO', $this->FOTO, true);
        $criteria->compare('ESTADO', $this->ESTADO, true);
        $criteria->compare('TIPO', $this->TIPO, true);
        $criteria->compare('FECHA_NACIMIENTO', $this->FECHA_NACIMIENTO, true);
        $criteria->compare('OBS', $this->OBS, true);
        $criteria->compare('COD_USUARIO', $this->COD_USUARIO);
        $criteria->compare('FECHA_ACTUALIZACION', $this->FECHA_ACTUALIZACION, true);
        $criteria->compare('COD_GRUPO', $this->COD_GRUPO, true);
        $criteria->compare('PARTICIPA_COMUNIDAD', $this->PARTICIPA_COMUNIDAD, true);
        $criteria->compare('USU_ALCANTARILLADO', $this->USU_ALCANTARILLADO, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
	    public function searchIngresarMedidor() {
        $criteria = new CDbCriteria;

        $criteria->compare('CODIGO', $this->CODIGO, true);
        $criteria->compare('CI', $this->CI, true);
        $criteria->compare('APELLIDO', $this->APELLIDO, true);
        $criteria->compare('GENERO', $this->GENERO, true);
        $criteria->compare('COD_BARRA', $this->COD_BARRA, true);
        $criteria->compare('DIRECCION', $this->DIRECCION, true);
        $criteria->compare('TELEFONO', $this->TELEFONO, true);
        $criteria->compare('CELULAR', $this->CELULAR, true);
        $criteria->compare('EMAIL', $this->EMAIL, true);
        $criteria->compare('ESTADO_CIVIL', $this->ESTADO_CIVIL, true);
        $criteria->compare('NOMBRE_CONYUGE', $this->NOMBRE_CONYUGE, true);
        $criteria->compare('FOTO', $this->FOTO, true);
        $criteria->compare('ESTADO', $this->ESTADO, true);
        $criteria->compare('TIPO', $this->TIPO, true);
        $criteria->compare('FECHA_NACIMIENTO', $this->FECHA_NACIMIENTO, true);
        $criteria->compare('OBS', $this->OBS, true);
        $criteria->compare('COD_USUARIO', $this->COD_USUARIO);
        $criteria->compare('FECHA_ACTUALIZACION', $this->FECHA_ACTUALIZACION, true);
        $criteria->compare('COD_GRUPO', $this->COD_GRUPO, true);
        $criteria->compare('PARTICIPA_COMUNIDAD', $this->PARTICIPA_COMUNIDAD, true);
        $criteria->compare('USU_ALCANTARILLADO', $this->USU_ALCANTARILLADO, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
    
     
    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}