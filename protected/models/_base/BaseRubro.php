<?php

/**
 * This is the model base class for the table "rubro".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Rubro".
 *
 * Columns in table "rubro" available as properties of the model,
 * followed by relations of table "rubro" available as properties of the model.
 *
 * @property string $ID
 * @property string $ID_SUBCUENTA
 * @property string $DESCRIPCION
 * @property string $V_UNITARIO
 * @property integer $PORCEN
 * @property string $FEC_CREACION
 * @property string $TIPO
 * @property integer $COD_USUARIO
 * @property string $FECHA_ACTUALIZACION
 * @property integer $MORA
 * @property integer $PLAZOS
 * @property string $VALOR_LETRA
 * @property string $SALDO
 *
 * @property Detalle[] $detalles
 */
abstract class BaseRubro extends AweActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'rubro';
    }

    public static function representingColumn() {
        return 'DESCRIPCION';
    }

    public function rules() {
        return array(
            array('DESCRIPCION, ID_SUBCUENTA',  'required'),
            array('COD_USUARIO, PORCEN, MORA, PLAZOS, ID_SUBCUENTA', 'numerical', 'integerOnly' => true),
            array('DESCRIPCION', 'length', 'max' => 100),
            array('V_UNITARIO', 'length', 'max' => 10),
            array('FEC_CREACION', 'safe'),
            array('V_UNITARIO, PORCEN, FEC_CREACION, TIPO, COD_USUARIO, FECHA_ACTUALIZACION, MORA, PLAZOS, VALOR_LETRA, SALDO', 'default', 'setOnEmpty' => true, 'value' => null),
            array('ID, ID_SUBCUENTA DESCRIPCION, V_UNITARIO, PORCEN, FEC_CREACION,TIPO, COD_USUARIO, FECHA_ACTUALIZACION, MORA, PLAZOS, VALOR_LETRA, SALDO ', 'safe', 'on' => 'search'),
            array('DESCRIPCION', 'unique', 'message' => 'El rubro ya esta creado'),
        );
    }

    public function relations() {
        return array(
            'detalles' => array(self::HAS_MANY, 'Detalle', 'ID_RUBRO'),
            'iDSUBCUENTA' => array(self::BELONGS_TO, 'SubcuentaContable', 'ID_SUBCUENTA'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
            'ID' => Yii::t('app', 'ID'),
            'DESCRIPCION' => Yii::t('app', 'Descripción'),
            'ID_SUBCUENTA' => Yii::t('app', 'Subcuenta contable'),
            'V_UNITARIO' => Yii::t('app', 'Valor'),
            'PORCEN' => Yii::t('app', 'Interes por mora mensual (%)'),
            'FEC_CREACION' => Yii::t('app', 'Fecha de creación'),
            'TIPO' => Yii::t('app', 'Aplica a'),
            'COD_USUARIO' => Yii::t('app', 'Modificado por:'),
            'FECHA_ACTUALIZACION' => Yii::t('app', 'Modificado el:'),
            'MORA' => Yii::t('app', 'Aplica mora'),
            'PLAZOS' => Yii::t('app', 'Meses plazo'),
            'VALOR_LETRA' => Yii::t('app', 'Monto mensual'),
            'SALDO' => Yii::t('app', 'Saldo a cancelar'),
            'detalles' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('ID', $this->ID, true);
        $criteria->compare('ID_SUBCUENTA', $this->ID_SUBCUENTA, true);
        $criteria->compare('DESCRIPCION', $this->DESCRIPCION, true);
        $criteria->compare('V_UNITARIO', $this->V_UNITARIO, true);
        $criteria->compare('PORCEN', $this->PORCEN);
        $criteria->compare('FEC_CREACION', $this->FEC_CREACION, true);
        $criteria->compare('TIPO', $this->TIPO, true);
        $criteria->compare('MORA', $this->MORA, true);
        $criteria->compare('PLAZOS', $this->PLAZOS, true);
        $criteria->compare('VALOR_LETRA', $this->VALOR_LETRA, true);
        $criteria->compare('SALDO', $this->SALDO, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort' => array(
                'defaultOrder' => 'FEC_CREACION DESC',
            ),
        ));
    }

    public function searchFacturas() {
        $criteria = new CDbCriteria;

        $criteria->compare('ID', $this->ID, true);
        $criteria->compare('ID_SUBCUENTA', $this->ID_SUBCUENTA, true);
        $criteria->compare('DESCRIPCION', $this->DESCRIPCION, true);
        $criteria->compare('V_UNITARIO', $this->V_UNITARIO, true);
        $criteria->compare('PORCEN', $this->PORCEN);
        $criteria->compare('FEC_CREACION', $this->FEC_CREACION, true);
        $criteria->compare('TIPO', 1, true);
        $criteria->compare('MORA', $this->MORA, true);
        $criteria->compare('PLAZOS', $this->PLAZOS, true);
        $criteria->compare('VALOR_LETRA', $this->VALOR_LETRA, true);
        $criteria->compare('SALDO', $this->SALDO, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort' => array(
                'defaultOrder' => 'FEC_CREACION DESC',
            ),
        ));
    }

    public function searchRecibos() {
        $criteria = new CDbCriteria;

        $criteria->compare('ID', $this->ID, true);
        $criteria->compare('ID_SUBCUENTA', $this->ID_SUBCUENTA, true);
        $criteria->compare('DESCRIPCION', $this->DESCRIPCION, true);
        $criteria->compare('V_UNITARIO', $this->V_UNITARIO, true);
        $criteria->compare('PORCEN', $this->PORCEN);
        $criteria->compare('FEC_CREACION', $this->FEC_CREACION, true);
        $criteria->compare('TIPO', 2, true);
        $criteria->compare('MORA', $this->MORA, true);
        $criteria->compare('PLAZOS', $this->PLAZOS, true);
        $criteria->compare('VALOR_LETRA', $this->VALOR_LETRA, true);
        $criteria->compare('SALDO', $this->SALDO, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'sort' => array(
                'defaultOrder' => 'FEC_CREACION DESC',
            ),
        ));
    }

    public function behaviors() {
        return array_merge(array(
                ), parent::behaviors());
    }

}
