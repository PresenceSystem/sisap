<?php

/**
 * This is the model base class for the table "recuento".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Recuento".
 *
 * Columns in table "recuento" available as properties of the model,
 * followed by relations of table "recuento" available as properties of the model.
 *
 * @property string $ID
 * @property string $ID_CAJA
 * @property string $UNO
 * @property string $CINCO
 * @property string $DIEZ
 * @property string $VIENTICINCO
 * @property string $CINCUENTA
 * @property string $UNO_D
 * @property string $CINCO_D
 * @property string $DIEZ_D
 * @property string $VIENTE_D
 * @property string $CINCUENTA_D
 * @property string $CIEN_D
 * @property string $TOTAL
 * @property string $COD_USUARIO
 * @property string $FECHA_ACTUALIZACION
 *
 * @property Caja $iDCAJA
 * @property Usuario $cODUSUARIO
 */
abstract class BaseRecuento extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'recuento';
    }

    public static function representingColumn() {
        return 'FECHA_ACTUALIZACION';
    }

    public function rules() {
        return array(
            array('', 'required'),
            array('ID_CAJA, COD_USUARIO', 'length', 'max'=>11),
            array('UNO, CINCO, DIEZ, VIENTICINCO, CINCUENTA, UNO_D, CINCO_D, DIEZ_D, VIENTE_D, CINCUENTA_D, CIEN_D', 'length', 'max'=>5),
            array('TOTAL', 'length', 'max'=>7),
            array('UNO, CINCO, DIEZ, VIENTICINCO, CINCUENTA, UNO_D, CINCO_D, DIEZ_D, VIENTE_D, CINCUENTA_D, CIEN_D, TOTAL, COD_USUARIO', 'default', 'setOnEmpty' => true, 'value' => null),
            array('ID, ID_CAJA, UNO, CINCO, DIEZ, VIENTICINCO, CINCUENTA, UNO_D, CINCO_D, DIEZ_D, VIENTE_D, CINCUENTA_D, CIEN_D, TOTAL, COD_USUARIO, FECHA_ACTUALIZACION', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'iDCAJA' => array(self::BELONGS_TO, 'Caja', 'ID_CAJA'),
            'cODUSUARIO' => array(self::BELONGS_TO, 'Usuario', 'COD_USUARIO'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'ID' => Yii::t('app', 'ID'),
                'ID_CAJA' => Yii::t('app', 'Id Caja'),
                'UNO' => Yii::t('app', 'Uno'),
                'CINCO' => Yii::t('app', 'Cinco'),
                'DIEZ' => Yii::t('app', 'Diez'),
                'VIENTICINCO' => Yii::t('app', 'Vienticinco'),
                'CINCUENTA' => Yii::t('app', 'Cincuenta'),
                'UNO_D' => Yii::t('app', 'Uno D'),
                'CINCO_D' => Yii::t('app', 'Cinco D'),
                'DIEZ_D' => Yii::t('app', 'Diez D'),
                'VIENTE_D' => Yii::t('app', 'Viente D'),
                'CINCUENTA_D' => Yii::t('app', 'Cincuenta D'),
                'CIEN_D' => Yii::t('app', 'Cien D'),
                'TOTAL' => Yii::t('app', 'Total'),
                'COD_USUARIO' => Yii::t('app', 'Cod Usuario'),
                'FECHA_ACTUALIZACION' => Yii::t('app', 'Fecha Actualizacion'),
                'iDCAJA' => null,
                'cODUSUARIO' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('ID', $this->ID, true);
        $criteria->compare('ID_CAJA', $this->ID_CAJA);
        $criteria->compare('UNO', $this->UNO, true);
        $criteria->compare('CINCO', $this->CINCO, true);
        $criteria->compare('DIEZ', $this->DIEZ, true);
        $criteria->compare('VIENTICINCO', $this->VIENTICINCO, true);
        $criteria->compare('CINCUENTA', $this->CINCUENTA, true);
        $criteria->compare('UNO_D', $this->UNO_D, true);
        $criteria->compare('CINCO_D', $this->CINCO_D, true);
        $criteria->compare('DIEZ_D', $this->DIEZ_D, true);
        $criteria->compare('VIENTE_D', $this->VIENTE_D, true);
        $criteria->compare('CINCUENTA_D', $this->CINCUENTA_D, true);
        $criteria->compare('CIEN_D', $this->CIEN_D, true);
        $criteria->compare('TOTAL', $this->TOTAL, true);
        $criteria->compare('COD_USUARIO', $this->COD_USUARIO);
        $criteria->compare('FECHA_ACTUALIZACION', $this->FECHA_ACTUALIZACION, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}