<?php

/**
 * This is the model base class for the table "medidor".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Medidor".
 *
 * Columns in table "medidor" available as properties of the model,
 * followed by relations of table "medidor" available as properties of the model.
 *
 * @property string $ID
 * @property string $NUMERO
 * @property integer $CONSUMO_INICIAL
 * @property STRING $ORDEN_RECORIDO
  * @property string $ID_GRUPO
 * @property integer $COD_USUARIO
 * @property string $FECHA_ACTUALIZACION
 *
 * @property SocioMedidor[] $socioMedidors
 */
abstract class BaseMedidor extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'medidor';
    }

    public static function representingColumn() {
        return 'NUMERO';
    }

    public function rules() {
        return array(
            array('NUMERO', 'required'),
            array('NUMERO','unique'),
            array('CONSUMO_INICIAL,  ID_GRUPO, COD_USUARIO', 'numerical', 'integerOnly'=>true),
            array('NUMERO', 'length', 'max'=>150),
            array('CONSUMO_INICIAL, ORDEN_RECORIDO', 'default', 'setOnEmpty' => true, 'value' => null),
            array('ID, NUMERO, CONSUMO_INICIAL, ORDEN_RECORIDO, ID_GRUPO, COD_USUARIO, FECHA_ACTUALIZACION', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'socio'=>array(self::MANY_MANY, 'Socio','socio_medidor(CODIGO_SOCIO, ID_MEDIDOR)'),
            //'socioMedidors' => array(self::HAS_MANY, 'SocioMedidor', 'ID_MEDIDOR'),
            'usuario' => array(self::BELONGS_TO, 'Usuario', 'COD_USUARIO'),
              'iDGRUPO'=>array(self::BELONGS_TO, 'Grupo','ID_GRUPO'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'ID' => Yii::t('app', 'ID'),
                'NUMERO' => Yii::t('app', 'NÃºmero del medidor'),
                'CONSUMO_INICIAL' => Yii::t('app', 'Consumo inicial'),
                'ORDEN_RECORIDO' => Yii::t('app', 'Orden de recorrido'),
                'ID_GRUPO' => Yii::t('app', 'Grupo'),
                        'COD_USUARIO' => Yii::t('app', 'Modificado por:'),
                'FECHA_ACTUALIZACION' => Yii::t('app', 'Modificado el:'),
                'socioMedidors' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('ID', $this->ID, true);
        $criteria->compare('NUMERO', $this->NUMERO, true);
        $criteria->compare('CONSUMO_INICIAL', $this->CONSUMO_INICIAL);
        $criteria->compare('ORDEN_RECORIDO', $this->ORDEN_RECORIDO);
        $criteria->compare('ID_GRUPO', $this->ID_GRUPO);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}